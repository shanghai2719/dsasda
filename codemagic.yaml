workflows:
  macos_vps_247:
    name: "macOS M4 VPS Loop Runner (auto-restart by hours)"
    max_build_duration: 1200   # gi·ªõi h·∫°n Codemagic 2 gi·ªù
    instance_type: mac_mini_m2
    environment:
      vars:
        LOOP_FILE: "loop.py"
        PERSIST_PATH: "/Users/builder/.persist_data"
        MAX_HOURS: "1.9"  # 1.9 gi·ªù ‚âà 1h54m, t·ª± restart tr∆∞·ªõc khi timeout
      xcode: latest
    triggering:
      events:
        - push
    scripts:
      - name: üß± Setup m√¥i tr∆∞·ªùng
        script: |
          echo "=== Setup Python v√† th∆∞ m·ª•c l∆∞u data ==="
          brew install python@3.12 || echo "Python c√≥ s·∫µn"
          mkdir -p $PERSIST_PATH

      - name: üêç T·∫°o file loop Python
        script: |
          cat > $LOOP_FILE <<'PYCODE'
          import os, time, datetime, json, subprocess

          DATA_PATH = os.environ.get("PERSIST_PATH", "/Users/builder/.persist_data")
          LOG_FILE = os.path.join(DATA_PATH, "loop_log.json")
          MAX_HOURS = float(os.environ.get("MAX_HOURS", "1.9"))
          RUNTIME_LIMIT = MAX_HOURS * 3600  # quy ƒë·ªïi ra gi√¢y

          print("üåÄ VPS Loop Runner kh·ªüi ƒë·ªông...")
          start_time = time.time()
          os.makedirs(DATA_PATH, exist_ok=True)

          while True:
              now = datetime.datetime.now().isoformat()
              uptime = time.time() - start_time
              print(f"[{now}] H·ªá th·ªëng ho·∫°t ƒë·ªông ·ªïn ƒë·ªãnh ({uptime/3600:.2f}h).")

              with open(LOG_FILE, "a") as f:
                  f.write(json.dumps({"time": now, "status": "running", "uptime_hr": uptime/3600}) + "\n")

              if uptime >= RUNTIME_LIMIT:
                  print(f"üîÅ ƒê√£ ƒë·∫°t gi·ªõi h·∫°n {MAX_HOURS} gi·ªù ‚Äî chu·∫©n b·ªã t·ª± kh·ªüi ƒë·ªông l·∫°i build...")
                  break

              time.sleep(60)

          token = os.environ.get("CM_API_TOKEN")
          app_id = os.environ.get("CM_APP_ID")
          if token and app_id:
              print("üì° G·ª≠i y√™u c·∫ßu kh·ªüi ƒë·ªông l·∫°i build t·ªõi Codemagic API...")
              subprocess.call([
                  "curl", "-X", "POST",
                  "https://api.codemagic.io/builds",
                  "-H", "Content-Type: application/json",
                  "-H", f"x-auth-token: {token}",
                  "-d", f'{{"appId":"{app_id}","workflowId":"macos_vps_247"}}'
              ])
          else:
              print("‚ö†Ô∏è Thi·∫øu CM_API_TOKEN ho·∫∑c CM_APP_ID ‚Äî kh√¥ng th·ªÉ t·ª± restart.")
          PYCODE

      - name: üöÄ Ch·∫°y loop
        script: |
          python3 $LOOP_FILE
