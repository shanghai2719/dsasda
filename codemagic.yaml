workflows:
  macos_vps_247:
    name: "macOS VPS Loop Runner (auto-scheduler)"
    max_build_duration: 120
    instance_type: mac_mini_m2
    environment:
      vars:
        LOOP_FILE: "loop.py"
        PERSIST_PATH: "/Users/builder/.persist_data"
        MAX_HOURS: "1.8"   # 1h48m: tự kết thúc trước timeout
      xcode: latest

    # ⚙️ Codemagic Scheduler: tự khởi chạy build mỗi 110 phút
    triggering:
      events:
        - schedule:
            cron: "*/110 * * * *"
            branch: main

    scripts:
      - name: Setup environment
        script: |
          echo "=== Setting up Python ==="
          brew install python@3.12 || echo "Python already available"
          mkdir -p $PERSIST_PATH

      - name: Create loop script
        script: |
          cat > $LOOP_FILE <<'PYCODE'
          import os, time, datetime, json

          DATA_PATH = os.environ.get("PERSIST_PATH", "/Users/builder/.persist_data")
          LOG_FILE = os.path.join(DATA_PATH, "loop_log.json")
          MAX_HOURS = float(os.environ.get("MAX_HOURS", "1.8"))
          RUNTIME_LIMIT = MAX_HOURS * 3600

          print("=== VPS Loop Runner started ===")
          start_time = time.time()
          os.makedirs(DATA_PATH, exist_ok=True)

          try:
              while True:
                  uptime = time.time() - start_time
                  now = datetime.datetime.now().isoformat()
                  remaining = RUNTIME_LIMIT - uptime
                  print(f"[{now}] Running {uptime/3600:.2f}h (remaining {remaining/60:.1f} min)")

                  # Ghi log uptime mỗi 5 phút
                  if int(uptime) % 300 < 60:
                      with open(LOG_FILE, "a") as f:
                          f.write(json.dumps({"time": now, "uptime_hr": uptime/3600}) + "\n")

                  if uptime >= RUNTIME_LIMIT:
                      print(f"Reached {MAX_HOURS}h limit — stopping build safely.")
                      break

                  time.sleep(60)
          except Exception as e:
              print(f"Loop error: {e}")
          PYCODE

      - name: Run loop
        script: |
          echo "=== Running VPS Loop ==="
          python3 $LOOP_FILE
